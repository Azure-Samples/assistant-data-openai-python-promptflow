ai:
  # use references to an existing AI Hub+Project resource to connect it to your hub
  # or else provision.py will create a resource with those references
  subscription_id: "<your-subscription-id>"
  resource_group_name: "<your_resource_group>"
  hub_name: "<hub_name>"
  project_name: "<project_name>"
  region: "eastus"

aoai:
  # use references to an existing AOAI resource to connect it to your hub
  # or else provision.py will create a resource with those references

  # uncomment only if sub/rg/region are different from AI Hub
  # subscription_id: "<your-subscription-id>"
  # resource_group_name: "<your_resource_group>"
  # IMPORTANT: for assistant, region needs to be in [australiaeast, eastus, eastus2, francecentral, norwayeast, swedencentral, uksouth]
  # region: "eastus"
  aoai_resource_name: "<my-new-aoai>"

  # specify the name of the existing/creating hub connection for this resource
  connection_name: "aoai-connection" # this needs to match with name used for env vars below

  # specify deployments existing/creating
  deployments:
    - name: "chat-35-turbo"
      model: "gpt-35-turbo"
      version: "1106" # this version is required for Assistant API to work
      capacity: 30
    - name: "evaluation-35-turbo"
      model: "gpt-35-turbo"
      version: "0301" # evaluation works more reliably on a non-preview model
      capacity: 30

environment:
  # below will be used for --export-env argument
  variables:
    # those env vars are drawn from the AI hub connections
    AZURE_OPENAI_ENDPOINT: "azureml://connections/${aoai.connection_name}/target"
    # those are just constants
    AZURE_OPENAI_CHAT_DEPLOYMENT: "${aoai.deployments[0].name}"
