{
    "name": "query_order_data",
    "description": "Run a SQL query against table `order_data` and return the results in JSON format.\nOrder data is stored in a SQLite table with properties:\n\n#  Number_of_Orders INTEGER \"the number of orders processed\"\n#  Sum_of_Order_Value_USD REAL \"the total value of the orders processed in USD\"\n#  Sum_of_Number_of_Items REAL \"the sum of items in the orders processed\"\n#  Number_of_Orders_with_Discount INTEGER \"the number of orders that received a discount\"\n#  Sum_of_Discount_Percentage REAL \"the sum of discount percentage -- useful to calculate average discounts given\"\n#  Sum_of_Shipping_Cost_USD REAL \"the sum of shipping cost for the processed orders\"\n#  Number_of_Orders_Returned INTEGER \"the number of orders returned by the customers\"\n#  Number_of_Orders_Cancelled INTEGER \"the number or orders cancelled by the customers before they were sent out\"\n#  Sum_of_Time_to_Fulfillment REAL \"the sum of time to fulfillment\"\n#  Number_of_Orders_Repeat_Customers INTEGER \"number of orders that were placed by repeat customers\"\n#  Year INTEGER\n#  Month INTEGER\n#  Day INTEGER\n#  Date TIMESTAMP\n#  Day_of_Week INTEGER in 0 based format, Monday is 0, Tuesday is 1, etc.\n#  main_category TEXT\n#  sub_category TEXT\n#  product_type TEXT\n#  Region TEXT\n\nIn this table all numbers are already aggregated, so all queries will be some type of aggregation with group by.",
    "parameters": {
        "type": "object",
        "properties": {
            "sql_query": {
                "type": "string",
                "description": "The SQL query to run against the sales database"
            }
        },
        "required": ["sql_query"]
    }
}
